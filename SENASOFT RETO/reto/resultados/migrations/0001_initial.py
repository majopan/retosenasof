# Generated by Django 5.1.1 on 2024-09-24 18:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('codigo', models.CharField(max_length=255, verbose_name='código único')),
                ('role', models.CharField(choices=[('', 'Seleccione un rol'), ('admin', 'Admin'), ('medico', 'Medico')], default='', max_length=10)),
                ('name', models.CharField(max_length=255, verbose_name='Nombre completo')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electrónico')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección de residencia')),
                ('celular', models.CharField(max_length=15, verbose_name='Número de celular')),
                ('tipo_identificacion', models.CharField(choices=[('cedula_ciudadania', 'Cédula de ciudadanía'), ('tarjeta_identidad', 'Tarjeta de identidad'), ('cedula_extranjeria', 'Cédula de extranjería')], max_length=20, verbose_name='Tipo de identificación')),
                ('numero_identificacion', models.CharField(max_length=20, verbose_name='Número de identificación')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('sexo', models.CharField(choices=[('Femenino', 'Femenino'), ('Maculino', 'Maculino'), ('Otro', 'Otro')], max_length=10, verbose_name='Sexo biológico')),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. El usuario obtendrá todos los permisos otorgados a cada uno de sus grupos.', related_name='customuser_set', related_query_name='customuser', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='customuser_set', related_query_name='customuser', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
